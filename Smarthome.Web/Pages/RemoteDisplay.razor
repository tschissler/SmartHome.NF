@page "/remotedisplay"
@using HelpersLib
@using Newtonsoft.Json
@using Smarthome.Web.Controls
@implements IDisposable

<PageTitle>Esszimmer</PageTitle>

<h2>Raumklima</h2>
<div class="container">
    <div class="row">
        <div class="col-3">
            <CircularGaugeControl DataPoint="@dataPoints.Temperature" Color="#009900"></CircularGaugeControl>
        </div>
        <div class="col-3">
            <CircularGaugeControl DataPoint="@dataPoints.Humidity" Color="#009900"></CircularGaugeControl>
        </div>
        <div class="col-3">
            <CircularGaugeControl DataPoint="@dataPoints.Pressure" Color="#009900"></CircularGaugeControl>
        </div>
        <div class="col-3">
            <CircularGaugeControl DataPoint="@dataPoints.Illumination" Color="#009900"></CircularGaugeControl>
        </div>
        <div class="col-3">
            <CircularGaugeControl DataPoint="@dataPoints.TempKidsRoom" Color="#009900"></CircularGaugeControl>
        </div>
        <div class="col-3">
            <CircularGaugeControl DataPoint="@dataPoints.TempBathRoom" Color="#009900"></CircularGaugeControl>
        </div>
        <div class="col-3">
            <CircularGaugeControl DataPoint="@dataPoints.TempSetKidsRoom" Color="#009900"></CircularGaugeControl>
        </div>
        <div class="col-3">
            <CircularGaugeControl DataPoint="@dataPoints.TempSetBathRoom" Color="#009900"></CircularGaugeControl>
        </div>
    </div>
    <div class="row">
        <div class="col">
            <TemperatureControl DataPoints="new List<DecimalDataPoint>{dataPoints.Temperature, dataPoints.TempKidsRoom, dataPoints.TempBathRoom, dataPoints.TempSetKidsRoom, dataPoints.TempSetBathRoom}" Label="Temperatur" UseAggregated=false></TemperatureControl>
        </div>
    </div>
    <div class="row">
        <div class="col">
            <TemperatureControl DataPoints="new List<DecimalDataPoint>{dataPoints.Temperature, dataPoints.TempKidsRoom, dataPoints.TempBathRoom, dataPoints.TempSetKidsRoom, dataPoints.TempSetBathRoom}" Label="Temperatur" UseAggregated=true></TemperatureControl>
        </div>
    </div>
</div>

<p>Zeit: @DateTime.Now</p>

@code {
    private Timer refreshTimer;
    private RemoteDisplayDataPoints dataPoints = new();

    protected override void OnInitialized()
    {
        refreshTimer = new Timer(Refresh, null, 1000, 1000);
    }

    private void Refresh(object? state)
    {
        try
        {
            using (HttpClient Http = new HttpClient())
            {
                var jsonString = Http.GetStringAsync($"http://localhost:5005/readremotedisplaydata").Result;
                dataPoints = JsonConvert.DeserializeObject<RemoteDisplayDataPoints>(jsonString);
                Cleanup(dataPoints.TempBathRoom);
                Cleanup(dataPoints.TempKidsRoom);
                Cleanup(dataPoints.TempSetBathRoom);
                Cleanup(dataPoints.TempSetKidsRoom);
                Cleanup(dataPoints.Temperature);
                InvokeAsync(StateHasChanged);
            }
        }
        catch (Exception ex)
        {
            ConsoleHelpers.PrintErrorMessage("Failed to read data from SensorDataService, Error: " + ex.Message);
        }
    }

    private void Cleanup(DecimalDataPoint dataPoint)
    {
        if (dataPoint.History.DataHistory.Count > 1)
        {
            dataPoint.History.DataHistory.RemoveAt(0);
        }
        if (dataPoint.History.AggregatedHistory.Count > 1)
        {
            dataPoint.History.AggregatedHistory.RemoveAt(0);
        }
    }

    public void Dispose()
    {
        refreshTimer?.Dispose();
    }
}