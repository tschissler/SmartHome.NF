apiVersion: apps/v1
kind: Deployment
metadata:
  name: testservice
spec:
  replicas: 1
  selector:
    matchLabels:
      app: testservice
  template:
    metadata:
      labels:
        app: testservice
    spec:
      containers:
        - name: testservice
          image: tschissler/testservice:latest
---
apiVersion: v1
kind: Service
metadata:
  name: testservice-service
spec:
  selector:
    app: testservice
  ports:
    - protocol: TCP
      port: 31002  
      nodePort: 30002 # Port to access the service outside the cluste
      targetPort: 8080  # Port your application is listening on inside the pods
  type: NodePort      # Set the Service type to NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: smarthome-web
spec:
  replicas: 1
  selector:
    matchLabels:
      app: smarthome-web
  template:
    metadata:
      labels:
        app: smarthome-web
    spec:
      containers:
        - name: smarthome-web
          image: tschissler/smarthome.web:latest
          env:
            - name: SyncfusionLicenseKey
              value: init
---
apiVersion: v1
kind: Service
metadata:
  name: smarthome-web-service
spec:
  selector:
    app: smarthome-web
  ports:
    - protocol: TCP
      port: 31000
      nodePort: 30000 # Port to access the service outside the cluste
      targetPort: 5000  # Port your application is listening on inside the pods
  type: NodePort      # Set the Service type to NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pvservice
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pvservice
  template:
    metadata:
      labels:
        app: pvservice
    spec:
      containers:
        - name: pvservice
          image: tschissler/pvservice:latest
          env:
            - name: PowerDogPassword
              value: init
---
apiVersion: v1
kind: Service
metadata:
  name: pvservice-service
spec:
  selector:
    app: pvservice
  ports:
    - protocol: TCP
      port: 31003
      nodePort: 30003 # Port to access the service outside the cluste
      targetPort: 5003  # Port your application is listening on inside the pods
#  type: NodePort      # Set the Service type to NodePort
---
